#!/bin/bash

# =========== BASE ==========

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

echo_error() {
    echo -e ${YELLOW}"$@"${NC}
}

echo_success() {
    echo -e ${GREEN}"$@"${NC}
}

echo_important() {
    echo -e ${WHITE}"$@"${NC}
}

# =========== COMMON ==========

notify() {
    content=$1
    title=$2

    if [ "$title" = "" ]; then
        title="Have a nice day :)"
    fi

    if [[ "$OSTYPE" == "darwin"* ]]; then
        osascript -e "display notification \"$content\" with title \"$title\""
    fi
}

echo_and_notify() {
    echo $1
    notify $1
}

alert() {
    content=$1
    title=$2

    if [ "$title" = "" ]; then
        title="Have a nice day!"
    fi

    if [[ "$OSTYPE" == "darwin"* ]]; then
        osascript -e "display alert \"$title\" message \"$content\""
    fi
}

compile_code() {
    echo " ===== current pwd: `pwd` ===== "
    echo " JAVA => ${JAVA_HOME}"
    pwd=`pwd`
    proj_name=`basename $pwd`
    mvn clean install -DskipTests  -T 8

    if [ $? -eq 0 ];then
        notify "Compile $proj_name successfully:)" "Compilation"
    else
        alert "Compile $proj_name failed!" "Compilation"
    fi
}

## TCP
tcp_status() {
  netstat -n | awk '/^tcp/ {++state[$NF]} END {for(key in state) print key,"\t",state[key]}'
}

tcp_status_v() {
  netstat -n | awk '/^tcp/ {n=split($(NF-1),array,":");if(n<=2)++S[array[(1)]];else++S[array[(4)]];++s[$NF];++N} END {for(a in S){printf("%-20s %s\n", a, S[a]);++I}printf("%-20s %s\n","TOTAL_IP",I);for(a in s) printf("%-20s %s\n", a, s[a]);printf("%-20s %s\n","TOTAL_LINK",N);}'
}
